# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet idc "Description" b
import dataclasses as dc
endsnippet
snippet iglob "Description" b
import glob
endsnippet
snippet inp "Description" b
import numpy as np
endsnippet

snippet isp "Description" b
import scipy as sp
endsnippet

snippet isps "Description" b
import scipy.signal as sps
endsnippet

snippet indi "Description" b
import scipy.ndimage as ndi
endsnippet

snippet isd "Description" b
import sounddevice as sd
endsnippet

snippet iL "Description" b
import librosa as L
endsnippet

snippet ilib
import ${1} as ${2}
endsnippet

snippet iplt "Description" b
import matplotlib.pyplot as plt
endsnippet

snippet ipd "Description" b
import pandas as pd
endsnippet

snippet isns "Description" b
import seaborn as sns
endsnippet

snippet iap "Description" b
import argparse as ap
endsnippet

snippet apinit "Description" b
par = ap.ArgumentParser()
par.add_argument('--${1}')
ns = par.parse_args()
endsnippet
