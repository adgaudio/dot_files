#! /usr/bin/env python

import os
import sys
join = os.path.join

# source dir
s = os.path.realpath(os.path.dirname(__file__))
# dest dir
d = os.environ['HOME']


def maybe(f):
    def tryer(*args, **kwargs):
        try:
            f(*args, **kwargs)
        except Exception, e:
            print '    %s' % e
    return tryer


@maybe
def symlink(x, y, s=s, d=d):
    src = join(s,x)
    dest = join(d,y)
    print src + '......' + dest
    if os.path.exists(src):
        os.symlink(src, dest)
    else:
        print "    DOESN'T EXIST: %s" % src


def install_vim(s=s):
    # Install janus
    os.system(join(s, "vim/bootstrap_janus"))
    # Install vim plugin dependencies
    os.system('deactivate ; pip install jedi')

    os.system(join(s, 'vim/bootstrap_janus'))

#########################################
#########################################

if __name__ == '__main__':
    vim = False

    symlink("ackrc", ".ackrc")

    symlink("bash_aliases", ".bash_aliases")
    symlink("bash_functions", ".bash_functions")
    symlink("bash_aliases", ".bash_aliases")
    symlink("bash_extras", ".bash_extras")

    symlink("gitconfig", ".gitconfig")
    symlink("inputrc", ".inputrc")
    symlink("python/pythonrc.py", ".pythonrc.py")

    _ipy_dir = join(d, ".ipython/profile_default/startup")
    if not os.path.exists(_ipy_dir):
        os.makedirs(_ipy_dir)
    symlink("ipython_startup.ipy", join(_ipy_dir, "ipython_startup.ipy"))

    symlink("tmux/tmux.conf", ".tmux.conf")
    symlink("tmux/tmux_osx.conf", ".tmux_osx.conf")
    symlink("tmux/bash_completion_tmux.sh", ".bash_completion_tmux.sh")
    if 'linux' in sys.platform.lower():
        symlink("Xmodmap", ".Xmodmap")
    if vim:
        install_vim()
    # Install realiaser (for cmd prompt)
    #os.system('gem install realiaser')  # gem update realiaser
