#####
# ENV VARS
#####
export CDPATH="~:$CDPATH"
export EDITOR=vim
export HISTFILESIZE=10000
export HISTSIZE=5000
export PATH=~/bbin:~/bin:$PATH
export PYTHONSTARTUP=~/.pythonrc.py
export PYTHONPATH=.:$HOME/bin:$HOME:$PYTHONPATH

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
unset VIRTUAL_ENV

# Cuda ENV
export PATH=$PATH:/usr/local/cuda/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/lib
#####
# SHELL PROMPT
#####

# COLORS!!!
blue="\[\033[1;34m\]"
cyan="\[\033[2;36m\]"
gray="\[\033[0;37m\]"
green="\[\033[0;32m\]"
green_bold="\[\033[1;32m\]"
orange="\[\033[0;93m\]"  # not on all terminals
purple="\[\033[0;35m\]"
red="\[\033[0;31m\]"
white="\[\033[0m\]"
yellow="\[\033[0;33m\]"

function _my_ps1() {
  local last_rv=$?

  date_="\d \A"
  host="\h"
  pwd="\w"
  ME=(alexwork alexgaudio)
  isme="$(echo ${ME[@]:0} | grep "$(whoami)" >/dev/null ; echo $?)"
  imposter="\$(if [[ isme -ne "0" ]]; then echo \"${purple}($(whoami)) | \"; fi )"
  stoplight='$(echo -ne $stoplight_color)' # depends on PROMPT_COMMAND

  if [ $last_rv = 0 ] ; then
    stoplight_color="${green}"
  else
    stoplight_color="${red}"
  fi

  local git_status="`git status -sb 2>&1`"
  if [[ "$git_status" =~ .*[^\ ]MM\  ]] ; then
    #MM
    git_status_color=${red}
  elif [[ "$git_status" =~ .*[^\ ]M\ \  ]] ; then
    git_status_color=${orange}
    #M 
  elif [[ "$git_status" =~ .*[^\ ]\ M\  ]] ; then
    git_status_color=${yellow}
     #M
  elif [[ "$git_status" =~ .*[^\ ]\?\?\  ]] ; then
    #??
    git_status_color=${green_bold}
  else
    #clean
    git_status_color=${green}
  fi
  # Set git branch
  [[ "$git_status" =~ \##\ ([A-Za-z0-9]+) ]] && git_branch=${BASH_REMATCH[1]} || git_branch="no git"

  echo -n "\n${imposter}${cyan}${date_} | ${gray}${pwd} | ${git_status_color}${git_branch}"
  #echo -n "${white} | $(history |tail -n 1 | cut -d ' ' -f 3-20 | realiaser)"
  echo -n "\n${stoplight_color} \$ ${white}"
}

function _prompt_command() {
    PS1="`_my_ps1`"
}
PROMPT_COMMAND=_prompt_command



######
# Bash awesomeness
######

# Shell acts like vim
#set -o vi # check out inputrc for extra bindings and if necessary: #export INPUTRC=~/.inputrc
#
shopt -s autocd  #don't type cd to navigate directories
shopt -s cdable_vars # set the bash option so that no '$' is required when using the above facility
shopt -s cdspell #cd command will guess misspelled directories
shopt -s extglob #ability to use pattern matching like *(pattern1|pattern2) and ?(...) !(...) @(...)
shopt -s globstar # ** globs all files, sub-files and subdirectories
shopt -s lithist #multi-line commands are saved to history with newlines rather than semi-colons
shopt -s checkwinsize #update the values of LINES and COLUMNS after each cmd


# cd tricks from hayne.net/MacDev/Bash/aliases.bash
#EX:
#  $ save hi # saves hi=$PWD to a file ~/.dirs
#  $ sdirs # sources ~/.dirs
#  $ cd hi # note: 'shopt -s cdable_vars' is set above
alias sdirs='source ~/.dirs'
alias show='cat ~/.dirs'
function save ()
{
 sed --regexp-extended "/^$@$/d" ~/.dirs > ~/.dirs1; \mv ~/.dirs1 ~/.dirs; echo "$@"=\"`pwd`\" >> ~/.dirs; source ~/.dirs ; 
}

# stop XOFF and XON being sent from the keyboard via <C-s> and <C-q>
# but still allowing other software to send the commands.
# useful for vim-ipython plugin and anything that binds to <C-s>
stty ixoff -ixon
